version: '1.0'
steps:
  BuildApiImages:
    type: parallel
    steps:
      BuildingDecryptorDockerImage:
        title: Building Decryptor Docker Image
        type: build
        image_name: soluto/kamus
        working_directory: ./
        tag: '${{CF_BRANCH_TAG_NORMALIZED}}-decryptor'
        dockerfile: Dockerfile
      BuildingEncryptorDockerImage:
        title: Building Encryptor Docker Image
        type: build
        image_name: soluto/kamus
        working_directory: ./
        tag: '${{CF_BRANCH_TAG_NORMALIZED}}-encryptor'
        dockerfile: Dockerfile
        build_arguments:
          - PROJECT_NAME=encrypt-api
      BuildingBlackboxImage:
        title: Building blackbox Image
        type: build
        image_name: soluto/kamus
        working_directory: ./tests/blackbox
        tag: '${{CF_BRANCH_TAG_NORMALIZED}}-blackbox'
        dockerfile: Dockerfile
      BuildingWiremockImage:
        title: Building wiremock Image
        type: build
        image_name: soluto/kamus
        working_directory: ./tests/blackbox/Wiremock
        tag: '${{CF_BRANCH_TAG_NORMALIZED}}-wiremock'
        dockerfile: Dockerfile
      RunIntegrationTests:
        title: Run integration tests
        image: microsoft/dotnet:2.1-sdk
        working_directory: tests/integration
        commands:
          - dotnet build
          - dotnet test
  BlackBoxTests:
    title: Run black box tests
    type: composition
    composition: './tests/blackbox/compose/docker-compose.yaml'
    composition_candidates:
      black-box:
        command: ./run_test.sh
        volumes:
          - ${{CF_VOLUME}}:/reports
    composition_variables:      
      - ENCRYPTOR_IMAGE=${{BuildingEncryptorDockerImage}}
      - DECRYPTOR_IMAGE=${{BuildingDecryptorDockerImage}}
      - BLACKBOX_IMAGE=${{BuildingBlackboxImage}}
      - WIREMOCK_IMAGE=${{BuildingWiremockImage}}
  DynamicSecurityTests:
    title: Parse zap reports
    image: soluto/glue-ci:1532426297485
    working_directory: /app
    entry_point:
      - cat
    cmd:
      - /codefresh/volume/report.json
  export_my_access_token: 
    image: codefresh/cli
    commands:
      - cf_export GITHUB_TOKEN=$(codefresh get context github --decrypt -o yaml | yq -y .spec.data.auth.password)
  AddTags:
    title: Run integration tests
    image: alpine/git
    command: ./ci/version_to_deploy.sh
  PushEncryptorImage:
    type: push
    title: Push Encryptor Api - lastest
    candidate: ${{BuildingEncryptorDockerImage}}
    tags:
      - encryptor-latest
    credentials:
      username: ${{DOCKERHUB_REGISTRY_USERNAME}}
      password: ${{DOCKERHUB_REGISTRY_PASSWORD}}
    when:
      branch:
        only:
          - master
  PushDecryptorImage:
    type: push
    title: Push Decryptor Api - lastest
    candidate: ${{BuildingDecryptorDockerImage}}
    tags:
      - decryptor-latest
    credentials:
      username: ${{DOCKERHUB_REGISTRY_USERNAME}}
      password: ${{DOCKERHUB_REGISTRY_PASSWORD}}
    when:
      branch:
        only:
          - master